apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: node-red
  namespace: apps
  labels:
    k8s-app: node-red
spec:
  selector:
    matchLabels:
      name: node-red
  template:
    metadata:
      labels:
        name: node-red
    spec:
      hostNetwork: true
      tolerations:
      # these tolerations are to have the daemonset runnable on control plane nodes
      # remove them if your control plane nodes should not run pods
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      containers:
      - name: node-red
        env:
        - name: TZ
          value: America/Chicago
        image: nodered/node-red
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 8123
          timeoutSeconds: 1
        ports:
        - containerPort: 8123
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 8123
          timeoutSeconds: 1
        resources: {}
        startupProbe:
          failureThreshold: 30
          periodSeconds: 5
          successThreshold: 1
          tcpSocket:
            port: 8123
          timeoutSeconds: 1
        volumeMounts:
        - mountPath: /data
          name: data
        - name: tls
          mountPath: /etc/letsencrypt/
          readOnly: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: node-red-data
      - name: tls 
        secret:
          secretName: node-red-tls
