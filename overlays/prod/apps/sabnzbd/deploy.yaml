apiVersion: v1
kind: Service
metadata:
  name: sabnzbd
spec:
  selector:
    app.kubernetes.io/instance: sabnzbd
    app.kubernetes.io/name: sabnzbd
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  generation: 2
  labels:
    app.kubernetes.io/instance: sabnzbd
    app.kubernetes.io/name: sabnzbd
    app.kubernetes.io/version: 3.3.1
  name: sabnzbd
  namespace: apps
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: sabnzbd
      app.kubernetes.io/name: sabnzbd
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: sabnzbd
        app.kubernetes.io/name: sabnzbd
    spec:
      volumes:
        - name: sabznbd-config
          configMap:
            name: sabznbd-config
      containers:
      - name: sabnzbd
        env:
        - name: TZ
          value: UTC
        image: ghcr.io/k8s-at-home/sabnzbd:v3.3.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: http
          timeoutSeconds: 10
        name: sabnzbd
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 5
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: http
          timeoutSeconds: 10
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - name: sabznbd-config
          mountPath: /app/sabnzbd.ini
          subPath: sabnzbd.ini
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
  replicas: 1