---
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-config
  namespace: infra
  labels:
    app.kubernetes.io/name: eck-logstash
    app.kubernets.io/component: logstash
data:
  logstash.yml: |
    http.host: "0.0.0.0"
    path.config: /usr/share/logstash/pipeline
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-pipeline
  namespace: infra
  labels:
    app.kubernetes.io/name: eck-logstash
    app.kubernets.io/component: logstash
data:
  logstash.conf: |
    input {
      syslog {
        port => 5140
        type => "syslog"
      }
    }
    filter {
      if [type] == "syslog" {
        mutate { strip => ["message"] }

        if [program] == "filterlog" {
          opnsensefilter { field_name => "message" }
          if [direction_of_traffic] == "in" {
            geoip { source => "source" }
          } else {
            geoip { source => "destination" }
          }
        }
        mutate { remove_field => 'message' }
      }
    }
    output {
      elasticsearch {
        hosts => [ "${ES_HOSTS}" ]
        user => "${ES_USER}"
        password => "${ES_PASSWORD}"
        cacert => '/etc/logstash/certificates/ca.crt'
        index => "opnsense-%{+YYYY.MM.dd}"
      }
      stdout { codec => rubydebug }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash
  namespace: infra
  labels:
    app.kubernetes.io/name: eck-logstash
    app.kubernets.io/component: logstash
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: eck-logstash
      app.kubernets.io/component: logstash
  template:
    metadata:
      labels:
        app.kubernetes.io/name: eck-logstash
        app.kubernets.io/component: logstash
    spec:
      containers:
        - name: logstash
          image: docker.elastic.co/logstash/logstash-oss:7.13.1
          ports:
            - name: "tcp-beats"
              containerPort: 5044
            - name: "udp-syslog"
              containerPort: 5140
          env:
            - name: ES_HOSTS
              value: "https://elasticsearch-es-http.infra.svc:9200"
            - name: ES_USER
              value: "elastic"
            - name: ES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: elasticsearch-es-elastic-user
                  key: elastic
          volumeMounts:
            - name: config-volume
              mountPath: /usr/share/logstash/config
            - name: pipeline-volume
              mountPath: /usr/share/logstash/pipeline
            - name: ca-certs
              mountPath: /etc/logstash/certificates
              readOnly: true
          command: ["/bin/sh","-c"]
          args:
            - bin/logstash-plugin install logstash-filter-opnsensefilter;
              bin/logstash -f /usr/share/logstash/pipeline/logstash.conf;
              while true; do sleep 1000; done;
      volumes:
        - name: config-volume
          configMap:
            name: logstash-config
        - name: pipeline-volume
          configMap:
            name: logstash-pipeline
        - name: ca-certs
          secret:
            secretName: elasticsearch-es-http-certs-public
---
apiVersion: v1
kind: Service
metadata:
  name: logstash-syslog
  namespace: infra
  labels:
    app.kubernetes.io/name: eck-logstash
    app.kubernets.io/component: logstash
spec:
  ports:
    - name: "udp-syslog"
      port: 5140 
      protocol: UDP
      targetPort: 5140
  type: LoadBalancer
  selector:
    app.kubernetes.io/name: eck-logstash
    app.kubernets.io/component: logstash
