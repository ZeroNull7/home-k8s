bases:
- environments.yaml
---
repositories:
  - name: grafana
    url: https://grafana.github.io/helm-charts
  # Kubernetes incubator repo of helm charts
  - name: "incubator"
    url: "https://charts.helm.sh/incubator"

releases:
  - name: "loki-stack"
    chart: "grafana/loki-stack"
    disableValidation: true
    namespace: {{ .Namespace }}
    version: {{ .Values.loki_stack_chart_version | quote }}
    wait: true
    timeout: 300
    values:
    - {{ toYaml .Values.loki_stack | nindent 6 }}
  - name: "syslog-ng"
    chart: "incubator/raw"
    namespace: {{ .Namespace }}
    version: {{ .Values.k8s_raw_chart_version | quote }}
    wait: true
    timeout: 60
    values:
    - resources:
      - apiVersion: v1
        kind: ConfigMap
        metadata:
          name: syslog-ng-config
        data:
          syslog-ng.conf: |
            ############################################################################
            # Default syslog-ng.conf file which collects all local logs into a
            # single file called /var/log/messages tailored to container usage.
            #
            # The changes from the stock, default syslog-ng.conf file is that we've
            # dropped the system() source that is not needed and that we enabled network
            # connections using default-network-drivers(). Customize as needed and
            # override using the -v option to docker, such as:
            #
            #  docker run ...  -v "$PWD/syslog-ng.conf":/etc/syslog-ng/syslog-ng.conf
            #
            @version: 4.1
            @include "scl.conf"

            # First, set some global options.
            options { chain_hostnames(off); flush_lines(0); use_dns(no); use_fqdn(no);
            	  dns_cache(no); owner("root"); group("adm"); perm(0640);
            	  bad_hostname("^gconfd$");
            };

            ########################
            # Sources
            ########################
            # This is the default behavior of sysklogd package
            # Logs may come from unix stream, but not from another machine.
            #

            source s_src {
                   system();
                   internal();
                   network();
            };

            ########################
            # Destinations
            ########################

            # The root's console.
            #
            destination d_console { usertty("root"); };


            destination d_net { tcp("loki-stack-promtail-syslog.default.svc.cluster.local" port(1514) log_fifo_size(1000)); };
            destination d_kafka {
              channel {
                rewrite {
                  set("${HOST}"    value(".eventv1.host"));
                  set("1"          value(".eventv1.@version"));
                  set("${ISODATE}" value(".eventv1.@timestamp") condition("${.eventv1.@timestamp}" eq ""));
                  set("${MESSAGE}" value(".eventv1.message")    condition("${.eventv1.message}" eq ""));
                  set("${MSG}"     value(".eventv1.message")    condition("${.eventv1.message}" eq ""));
                  set("generic"    value(".eventv1.type")       condition("${.eventv1.type}" eq ""));
                };
                destination {
                  kafka-c(config(queue.buffering.max.ms("1000"))
                        topic("syslog")
                        bootstrap-servers("kafka.default.svc.cluster.local:9092")
                        message("$(format-json --key .eventv1.* --rekey .eventv1.* --shift 9)"));
                };
              };
            };

            log { 
              source(s_src); 
              destination(d_net);
              destination(d_kafka);
            };

      - apiVersion: apps/v1
        kind: Deployment
        metadata:
          annotations:
            loki-stack-component: syslog-ng
          creationTimestamp: null
          labels:
            io.kompose.service: syslog-ng
          name: loki-stack-syslog-ng
        spec:
          replicas: 1
          selector:
            matchLabels:
              io.kompose.service: syslog-ng
          strategy:
            type: Recreate
          template:
            metadata:
              annotations:
                loki-stack-component: syslog-ng
              creationTimestamp: null
              labels:
                io.kompose.service: syslog-ng
            spec:
              hostNetwork: true
              imagePullSecrets: 
                - name: reg-cred-secret
              containers:
                - args:
                  image: registry.simplefxn.com:5000/syslog-ng-kafka:0.0.1
                  imagePullPolicy: Always
                  name: loki-stack-syslog-ng
                  ports:
                    - containerPort: 514
                      protocol: UDP
                      hostPort: 514
                    - containerPort: 601
                    - containerPort: 514
                      protocol: TCP
                      hostPort: 514
                  resources: {}
                  volumeMounts:
                    - mountPath: /etc/syslog-ng/syslog-ng.conf
                      subPath: syslog-ng.conf
                      name: syslog-config-volume
              restartPolicy: Always
              volumes:
                - name: syslog-config-volume
                  configMap:
                    name: syslog-ng-config
    